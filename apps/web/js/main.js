// Arquivo principal da aplica√ß√£o
// Inicializa todos os componentes necess√°rios

// Importa√ß√µes
// Essas importa√ß√µes s√£o simuladas pois o projeto n√£o usa m√≥dulos ES6 ainda
// Em uma vers√£o futura, pode ser convertido para usar import/export apropriados
// As fun√ß√µes abaixo s√£o declaradas em outros arquivos e est√£o dispon√≠veis globalmente

/**
 * Inicializa a aplica√ß√£o ap√≥s o carregamento da p√°gina
 */
document.addEventListener('DOMContentLoaded', function() {
  console.log('Inicializando aplica√ß√£o Portas Perfis');
  
  try {
    // Inicializa componentes b√°sicos
    inicializar();
    
    // Inicializa o canvas de desenho
    inicializarCanvas();
    
    // Carrega a √∫ltima configura√ß√£o salva (se existir)
    carregarUltimaConfiguracao();
    
    // Inicializa controles de UI
    inicializarControles();
    
    // Inicializa modais
    inicializarModais();
    
    // Inicializa seletor de logo
    inicializarSeletorLogo();
    
    // Configura o bot√£o de diagn√≥stico para modo de desenvolvimento
    configurarBotaoDiagnostico();
    
    // Desenha a porta com a configura√ß√£o atual
    desenharPorta();
    
    console.log('Aplica√ß√£o inicializada com sucesso');
  } catch (erro) {
    console.error('Erro ao inicializar a aplica√ß√£o:', erro);
    alert('Ocorreu um erro ao inicializar a aplica√ß√£o. Verifique o console para mais detalhes.');
  }
});

/**
 * Configura o bot√£o de diagn√≥stico (apenas vis√≠vel em modo de desenvolvimento)
 */
function configurarBotaoDiagnostico() {
  const botaoDiagnostico = document.getElementById('diagnosticarBtn');
  
  // Exibe o bot√£o apenas se estiver em ambiente de desenvolvimento (localhost)
  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
    botaoDiagnostico.classList.remove('d-none');
    
    // Configura o evento de clique do bot√£o
    botaoDiagnostico.addEventListener('click', function() {
      abrirModalDiagnostico();
    });
  }
}

/**
 * Abre o modal de diagn√≥stico e exibe informa√ß√µes para debug
 */
function abrirModalDiagnostico() {
  const modal = new bootstrap.Modal(document.getElementById('diagnosticoModal'));
  
  // Recupera as configura√ß√µes atuais
  const configuracaoAtual = obterConfiguracaoAtual();
  
  // Exibe informa√ß√µes no modal
  document.getElementById('configAtualOutput').textContent = JSON.stringify(configuracaoAtual, null, 2);
  document.getElementById('armazenamentoOutput').textContent = JSON.stringify(obterTodasConfiguracoes(), null, 2);
  
  // Exibe informa√ß√µes do navegador
  const navegadorOutput = document.getElementById('navegadorOutput');
  navegadorOutput.innerHTML = `
    <p><strong>User Agent:</strong> ${navigator.userAgent}</p>
    <p><strong>Plataforma:</strong> ${navigator.platform}</p>
    <p><strong>Idioma:</strong> ${navigator.language}</p>
    <p><strong>Cookies Habilitados:</strong> ${navigator.cookieEnabled}</p>
    <p><strong>Mem√≥ria (se dispon√≠vel):</strong> ${navigator.deviceMemory ? navigator.deviceMemory + 'GB' : 'N√£o dispon√≠vel'}</p>
    <p><strong>Online:</strong> ${navigator.onLine}</p>
    <p><strong>Resolu√ß√£o:</strong> ${window.screen.width}x${window.screen.height}</p>
  `;
  
  // Configura o bot√£o para limpar o localStorage
  document.getElementById('limparStorageBtn').addEventListener('click', function() {
    if (confirm('Tem certeza que deseja limpar todos os dados armazenados? Esta a√ß√£o n√£o pode ser desfeita.')) {
      localStorage.clear();
      alert('LocalStorage limpo com sucesso.');
      modal.hide();
      location.reload();
    }
  });
  
  // Exibe o modal
  modal.show();
}

// Exibe uma mensagem de boas vindas no console
console.log('%cüö™ Portas Perfis - Sistema de Desenho', 'font-size:14px;font-weight:bold;color:#0d6efd;');
console.log('%cDesenvolvido para Conecta Solu√ß√µes', 'font-size:12px;color:#6c757d;');